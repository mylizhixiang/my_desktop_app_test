name: Build Flutter Linux App

on:
  push:
    branches: [main,master]  # 指定触发分支
  pull_request:
    branches: [main,master]
  # 若需通过标签触发发布（可选）
#   release:
#     types: [created]

jobs:
  build-linux:
    runs-on: ubuntu-latest

    steps:
      # ------------ 环境准备 ------------
      - name: Checkout code
        uses: actions/checkout@v4

      # ------------ 安装构建依赖 ------------
      - name: Install Linux dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
              clang cmake ninja-build pkg-config \
              libgtk-3-dev liblzma-dev libstdc++-12-dev

      # ------------ 配置 Flutter SDK ------------
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true  # 启用包缓存

      # ------------ 配置 Linux 构建支持 ------------
      - name: Enable Linux desktop
        run: flutter config --enable-linux-desktop

      # ------------ 代码测试（可选） ------------
    #   - name: Run tests
    #     run: flutter test

      # ------------ 构建 Release 版本 ------------
      - name: Build Linux app
        run: flutter build linux --release --dart-define=APP_ENV=prod

      # ------------ 打包 DEB 安装包 ------------
      - name: Create DEB package
        run: |
          mkdir -p deb_pkg/DEBIAN
          echo "Package: my-desktop-app
          Version: 1.0.0
          Architecture: amd64
          Maintainer: GitHub Actions <1107664795@qq.com>
          Description: My Flutter App
          " > deb_pkg/DEBIAN/control

          mkdir -p deb_pkg/usr/bin
          cp -r build/linux/x64/release/bundle/* deb_pkg/usr/bin/

          dpkg-deb --build deb_pkg linux_build/my-desktop-app_1.0.0_amd64.deb

      # ------------ 上传构建产物（到 Artifacts） ------------
      - name: Upload artifacts
        uses: actions/upload-artifact@v4.3.1
        with:
          name: linux-package
          path: |
            linux_build/*.deb
            build/linux/x64/release/bundle/

      # ------------ （可选）发布到 GitHub Releases ------------
    #   - name: Create GitHub Release
    #     if: github.event_name == 'release' && github.event.action == 'created' 
    #     uses: softprops/action-gh-release@v1
    #     with:
    #       files: |
    #         linux_build/*.deb
    #       draft: false
    #       prerelease: false
    #     env:
    #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
