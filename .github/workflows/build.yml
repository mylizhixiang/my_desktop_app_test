name: Build Flutter Linux App

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  build-linux:
    runs-on: ubuntu-latest
    container:
      image: centos:7
      options: --privileged -v /var/run/docker.sock:/var/run/docker.sock -v /usr/bin/docker:/usr/bin/docker

    steps:
      # ---------- 容器初始化 ----------
      - name: Prepare Container Environment
        run: |
          # 确保基础工具可用
          yum install -y which findutils curl

      # ---------- 安装 Node.js ----------
      - name: Install Node.js via Binary
        run: |
          curl -L -o node.tar.xz https://nodejs.org/dist/v16.20.2/node-v16.20.2-linux-x64.tar.xz
          tar -xf node.tar.xz -C /opt
          mv /opt/node-v16.20.2-linux-x64 /opt/node
          ln -sf /opt/node/bin/node /usr/local/bin/node
          node --version

      # ---------- 检出代码 ----------
      - name: Checkout code
        uses: actions/checkout@v4

      # ---------- 安装 CentOS 依赖 ----------
      - name: Install CentOS Dependencies
        run: |
          # 修复 yum 源
          sed -i.bak 's/mirrorlist/#mirrorlist/g' /etc/yum.repos.d/CentOS-*
          sed -i 's|#baseurl=http://mirror.centos.org|baseurl=http://vault.centos.org|g' /etc/yum.repos.d/CentOS-*
          
          yum -y update
          yum -y install centos-release-scl epel-release
          yum -y install devtoolset-9-gcc* clang cmake ninja-build gtk3-devel \
            libxkbcommon-x11-devel libstdc++-static rpm-build redhat-rpm-config

      # ---------- 安装 Flutter ----------
      - name: Install Flutter SDK
        run: |
          wget -q https://storage.googleapis.com/flutter_infra_release/releases/stable/linux/flutter_linux_3.22.4-stable.tar.xz
          tar -xf flutter_linux_3.22.4-stable.tar.xz
          echo "$GITHUB_WORKSPACE/flutter/bin" >> $GITHUB_PATH

      # ---------- 配置环境 ----------
      - name: Setup Build Environment
        run: |
          source /opt/rh/devtoolset-9/enable
          flutter config --enable-linux-desktop

      # ---------- 构建应用 ----------
      - name: Build Linux Release
        run: |
          source /opt/rh/devtoolset-9/enable
          flutter build linux --release --target-platform=linux-x64

      # ---------- 生成 RPM ----------
      - name: Create RPM Package
        run: |
          mkdir -p ~/rpmbuild/{BUILD,RPMS,SOURCES,SPECS,SRPMS}
          cp -r build/linux/x64/release/bundle ~/rpmbuild/BUILD/my-desktop-app

          cat << EOF > ~/rpmbuild/SPECS/my-desktop-app.spec
          %define _topdir %(pwd)/rpmbuild
          Name: my-desktop-app
          Version: 1.0.0
          Release: 1
          Summary: Flutter App
          License: MIT
          URL: https://github.com/mylizhixiang/my_desktop_app_test
          Requires: gtk3, libstdc++
          
          %description
          My Application
          
          %install
          mkdir -p %{buildroot}/opt/my-desktop-app
          cp -r %{_builddir}/my-desktop-app/* %{buildroot}/opt/my-desktop-app
          mkdir -p %{buildroot}/usr/bin
          ln -sf /opt/my-desktop-app/myapp %{buildroot}/usr/bin/my-desktop-app
          
          %files
          /opt/my-desktop-app/*
          /usr/bin/my-desktop-app
          EOF

          rpmbuild -bb ~/rpmbuild/SPECS/my-desktop-app.spec
          mkdir -p rpm_packages
          cp ~/rpmbuild/RPMS/x86_64/*.rpm rpm_packages/

      # ---------- 上传产物 ----------
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: rpm-package
          path: rpm_packages/*.rpm
